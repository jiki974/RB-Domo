package esir2.progse.ws.server;

import javax.jws.WebService;
import javax.xml.ws.Endpoint;

import org.osgi.framework.BundleActivator;
import org.osgi.framework.BundleContext;
import org.osgi.framework.InvalidSyntaxException;
import org.osgi.framework.ServiceReference;

@WebService( 
		endpointInterface = "esir2.progse.ws.server.HelloWebService", 
		serviceName = "HelloWorld")
public class Activator implements Runnable, BundleActivator{

	private boolean end;
	private BundleContext context;
	private Endpoint e;
		
	
	@Override
	public void start(BundleContext arg0) throws Exception {
		// TODO Auto-generated method stub
		context = arg0;
		end = false;
		
		System.out.println ("Starting Server");
		HelloWebServiceImpl implementor = new HelloWebServiceImpl ();
		String address = "http://localhost:9000/helloWorld";
		
		while(e.isPublished()==false){
		e = Endpoint.publish(address, implementor);
	}
		System.out.println("Server Ready");	
		//new Thread(this).start();

	}

	@Override
	public void stop(BundleContext arg0) throws Exception {
		// TODO Auto-generated method stub
		end = true;
		e.stop();
	}

	@Override
	public void run() {

		// TODO Auto-generated method stub
		while (!end) {

			

			ServiceReference refs[];
			try {
				refs = context.getAllServiceReferences(HelloWebService.class.getName(),null);
				if (refs != null && refs.length != 0) {
					for (ServiceReference servRef : refs) {
						HelloWebService service = (HelloWebService) context.getService(servRef);
						System.out.println(service.sayHello("paul"));
					}
				}
				Thread.sleep(5000);
				System.out.println("yoyoy");
			} catch (InterruptedException ie) {
				ie.printStackTrace();
			} catch (InvalidSyntaxException ee) {
				ee.printStackTrace();
			}
		}
	}

}
